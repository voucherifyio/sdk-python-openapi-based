# coding: utf-8

"""
    Voucherify API

    Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.

    The version of the OpenAPI document: v2018-08-01
    Contact: support@voucherify.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictInt

class CustomersPermanentDeletionCreateResponseBodyDataJson(BaseModel):
    """
    Statistics summarizing the number of related information that was deleted.  # noqa: E501
    """
    events: StrictInt = Field(..., description="Number of events deleted.")
    customer_events: StrictInt = Field(..., description="Number of customer events deleted.")
    daily_events: StrictInt = Field(..., description="Number of daily events deleted.")
    segments: StrictInt = Field(..., description="Number of segments deleted.")
    orders: StrictInt = Field(..., description="Number of orders deleted.")
    order_events: StrictInt = Field(..., description="Number of order events deleted.")
    customer: StrictInt = Field(..., description="Number of customers deleted.")
    __properties = ["events", "customer_events", "daily_events", "segments", "orders", "order_events", "customer"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomersPermanentDeletionCreateResponseBodyDataJson:
        """Create an instance of CustomersPermanentDeletionCreateResponseBodyDataJson from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomersPermanentDeletionCreateResponseBodyDataJson:
        """Create an instance of CustomersPermanentDeletionCreateResponseBodyDataJson from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomersPermanentDeletionCreateResponseBodyDataJson.parse_obj(obj)

        _obj = CustomersPermanentDeletionCreateResponseBodyDataJson.parse_obj({
            "events": obj.get("events"),
            "customer_events": obj.get("customer_events"),
            "daily_events": obj.get("daily_events"),
            "segments": obj.get("segments"),
            "orders": obj.get("orders"),
            "order_events": obj.get("order_events"),
            "customer": obj.get("customer") if obj.get("customer") is not None else 1
        })
        return _obj


