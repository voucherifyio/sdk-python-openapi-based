# coding: utf-8

"""
    Voucherify API

    Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.

    The version of the OpenAPI document: v2018-08-01
    Contact: support@voucherify.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class CustomEventReferral(BaseModel):
    """
    Referral object.  # noqa: E501
    """
    referrer_id: Optional[StrictStr] = Field(None, description="Unique referrer ID.")
    code: Optional[StrictStr] = Field(None, description="Voucher code.")
    id: Optional[StrictStr] = Field(None, description="Unique voucher ID.")
    __properties = ["referrer_id", "code", "id"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomEventReferral:
        """Create an instance of CustomEventReferral from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomEventReferral:
        """Create an instance of CustomEventReferral from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomEventReferral.parse_obj(obj)

        _obj = CustomEventReferral.parse_obj({
            "referrer_id": obj.get("referrer_id"),
            "code": obj.get("code"),
            "id": obj.get("id")
        })
        return _obj


